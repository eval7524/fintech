Dto 사용 이유

1. RequestDto -> 사용자가 서버에 보내는 데이터 (회원가입, 로그인 등)
2. ResponseDto -> 서버가 사용자에게 보내는 데이터(결과) (회원정보, 거래내역 등)

Member 엔티티 자체를 응답으로 보내면, 비밀번호까지 JSON 형식으로 노출될 수 있음 -> 보안 문제가 발생
DB 설계 (엔티티 구조)가 외부로 드러나게 되어 유지보수가 어려워짐

따라서 API 요구사항에 맞게 필요한 데이터만 노출시키기 위해 사용하는 것